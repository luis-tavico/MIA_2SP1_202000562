
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AJUSTE CADENA ENTERO FIT GUION IGUAL MKDISK PATH PAUSE RMDISK RUTA SIZE UNIDAD UNITinstrucciones    : instruccion instrucciones\n                        | instruccion instruccion : comando declaraciones\n                   | comando  comando : MKDISK\n               | RMDISK\n               | PAUSE declaraciones : declaracion declaraciones\n                     | declaracion declaracion : GUION parametro IGUAL valorparametro : SIZE\n                 | PATH\n                 | FIT\n                 | UNIT valor : ENTERO\n             | RUTA\n             | AJUSTE\n             | UNIDAD '
    
_lr_action_items = {'MKDISK':([0,2,3,4,5,6,8,9,11,18,19,20,21,22,],[4,4,-4,-5,-6,-7,-3,-9,-8,-10,-15,-16,-17,-18,]),'RMDISK':([0,2,3,4,5,6,8,9,11,18,19,20,21,22,],[5,5,-4,-5,-6,-7,-3,-9,-8,-10,-15,-16,-17,-18,]),'PAUSE':([0,2,3,4,5,6,8,9,11,18,19,20,21,22,],[6,6,-4,-5,-6,-7,-3,-9,-8,-10,-15,-16,-17,-18,]),'$end':([1,2,3,4,5,6,7,8,9,11,18,19,20,21,22,],[0,-2,-4,-5,-6,-7,-1,-3,-9,-8,-10,-15,-16,-17,-18,]),'GUION':([3,4,5,6,9,18,19,20,21,22,],[10,-5,-6,-7,10,-10,-15,-16,-17,-18,]),'SIZE':([10,],[13,]),'PATH':([10,],[14,]),'FIT':([10,],[15,]),'UNIT':([10,],[16,]),'IGUAL':([12,13,14,15,16,],[17,-11,-12,-13,-14,]),'ENTERO':([17,],[19,]),'RUTA':([17,],[20,]),'AJUSTE':([17,],[21,]),'UNIDAD':([17,],[22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,2,],[1,7,]),'instruccion':([0,2,],[2,2,]),'comando':([0,2,],[3,3,]),'declaraciones':([3,9,],[8,11,]),'declaracion':([3,9,],[9,9,]),'parametro':([10,],[12,]),'valor':([17,],[18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> instruccion instrucciones','instrucciones',2,'p_instrucciones_lista','gramatica.py',73),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_lista','gramatica.py',74),
  ('instruccion -> comando declaraciones','instruccion',2,'p_instrucciones_evaluar','gramatica.py',77),
  ('instruccion -> comando','instruccion',1,'p_instrucciones_evaluar','gramatica.py',78),
  ('comando -> MKDISK','comando',1,'p_comando','gramatica.py',82),
  ('comando -> RMDISK','comando',1,'p_comando','gramatica.py',83),
  ('comando -> PAUSE','comando',1,'p_comando','gramatica.py',84),
  ('declaraciones -> declaracion declaraciones','declaraciones',2,'p_declaraciones','gramatica.py',88),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','gramatica.py',89),
  ('declaracion -> GUION parametro IGUAL valor','declaracion',4,'p_declaracion','gramatica.py',92),
  ('parametro -> SIZE','parametro',1,'p_parametro','gramatica.py',96),
  ('parametro -> PATH','parametro',1,'p_parametro','gramatica.py',97),
  ('parametro -> FIT','parametro',1,'p_parametro','gramatica.py',98),
  ('parametro -> UNIT','parametro',1,'p_parametro','gramatica.py',99),
  ('valor -> ENTERO','valor',1,'p_valor','gramatica.py',103),
  ('valor -> RUTA','valor',1,'p_valor','gramatica.py',104),
  ('valor -> AJUSTE','valor',1,'p_valor','gramatica.py',105),
  ('valor -> UNIDAD','valor',1,'p_valor','gramatica.py',106),
]
